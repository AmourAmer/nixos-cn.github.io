import{_ as t,X as o,Y as r,Z as a,$ as n,a0 as s,a1 as i,F as d}from"./framework-d595da18.js";const c="/images/GreenHand/TurnOffWindowsFastboot.webp",p="/images/GreenHand/DisableSecureBoot.webp",l="/images/GreenHand/FirstBoot.webp",u="/images/GreenHand/TrulyMeet.webp",h="/images/GreenHand/UsbHostpot.webp",m={},b=i('<h1 id="双系统安装" tabindex="-1"><a class="header-anchor" href="#双系统安装" aria-hidden="true">#</a> 双系统安装</h1><h2 id="windows-系统上的准备" tabindex="-1"><a class="header-anchor" href="#windows-系统上的准备" aria-hidden="true">#</a> Windows 系统上的准备</h2><p>本章将介绍如何在已经安装了 Windows 系统的物理机上再安装 NixOS 。</p><h3 id="关闭快速启动" tabindex="-1"><a class="header-anchor" href="#关闭快速启动" aria-hidden="true">#</a> 关闭快速启动</h3><p>若不关闭 Windows 的快速启动，可能会导致 NixOS 掉网卡。点击 “更改当前不可用配置” 以后会出现一个 UAC 窗口，点击允许以后，再取消 “启用快速启动（推荐）” 复选框。</p><figure><img src="'+c+`" alt="关闭快速启动" tabindex="0" loading="lazy"><figcaption>关闭快速启动</figcaption></figure><h3 id="调整时间设置" tabindex="-1"><a class="header-anchor" href="#调整时间设置" aria-hidden="true">#</a> 调整时间设置</h3><p>由于 Windows 与 Linux 时间标准不同，从 Linux 切换回 Windows 会导致系统时间变更的问题。</p><p>在这里我们提供修改 Windows 设置，以让两种系统时间保持一致的的方法。</p><p>PowerShell 管理员权限运行：</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation <span class="token operator">/</span>v RealTimeIsUniversal <span class="token operator">/</span>t REG_DWORD <span class="token operator">/</span>d 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令向注册表添加了字段，下次重启生效。</p><h3 id="制作引导媒介" tabindex="-1"><a class="header-anchor" href="#制作引导媒介" aria-hidden="true">#</a> 制作引导媒介</h3>`,13),v={href:"https://www.ventoy.net/cn/download.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://nixos.org/download.html#nix-more:~:text=without%20a%20desktop.-,Minimal%20ISO%20image,-The%20minimal%20installation",target:"_blank",rel:"noopener noreferrer"},k=i('<h2 id="调整-bios-设置" tabindex="-1"><a class="header-anchor" href="#调整-bios-设置" aria-hidden="true">#</a> 调整 BIOS 设置</h2><p>在执行以下操作时，请将电脑关机，并将启动媒介连接电脑。</p><h3 id="关闭安全引导" tabindex="-1"><a class="header-anchor" href="#关闭安全引导" aria-hidden="true">#</a> 关闭安全引导</h3><p>在按下开机键，屏幕出现厂商品牌的时候，按住可以使你进入 BIOS 设置的按键，然后你会进入跟下图相同或类似的界面。</p><div class="hint-container warning"><p class="hint-container-title">厂商差异</p><p>具体情况以厂商主板为准。 不同厂商生产的机型进入 BIOS 设置的按键不相同，甚至界面也不会相同。 对于某些厂商（比如联想，宏碁），关闭安全启动需要为主板设置管理员密码，建议完成系统安装后立刻移除主板密码，以防止密码被遗忘。</p></div><figure><img src="'+p+'" alt="关闭安全引导" tabindex="0" loading="lazy"><figcaption>关闭安全引导</figcaption></figure><p>请关闭安全引导，尽管 Ventoy 和 NixOS 都已经支持了安全引导，为了统一环境，我们还是建议关闭安全引导。这一步没有代价，安装完成后，你随时可以把安全引导再开启。</p>',7),f={class:"hint-container tip"},x=a("p",{class:"hint-container-title"},"安全引导",-1),_={href:"https://github.com/nix-community/lanzaboote",target:"_blank",rel:"noopener noreferrer"},w=i(`<h3 id="调整启动顺序" tabindex="-1"><a class="header-anchor" href="#调整启动顺序" aria-hidden="true">#</a> 调整启动顺序</h3><div class="hint-container warning"><p class="hint-container-title">UEFI 支持</p><p>UEFI 和 Legacy 是两种不同的引导方式，安装前请查阅你的主板是否支持 UEFI，或者当前系统是否以 UEFI 方式安装。 对于 Windows 系统只需要使用磁盘管理或 DiskGenius 查看是否存在 ESP 分区即可。 而对于 Linux，键入：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span> /sys/firmware/efi/efivars
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>若存在输出，就代表支持 UEFI。 本教程仅适用于支持 UEFI 的主板或机型，Legacy 的安装方式会有些许区别，但不多。</p></div><p>默认情况下，BIOS 会从本地硬盘开始查找 EFI（ESP） 分区，然后启动这个分区的启动管理器，所以我们要在 BIOS 设置中找到诸如“启动顺序”选项，将 USB 拉到最高优先级。</p><p>保存后重启，不出意外就到了接下来的环节。</p><h2 id="引导选择" tabindex="-1"><a class="header-anchor" href="#引导选择" aria-hidden="true">#</a> 引导选择</h2><p>你会先进入 Ventoy 的引导界面，然后使用上下按键选择你需要引导的镜像，回车确认。下图就是你即将见到的 NixOS 的引导界面：</p><figure><img src="`+l+'" alt="初见引导界面" tabindex="0" loading="lazy"><figcaption>初见引导界面</figcaption></figure><p>正常来说选择第一项正常启动即可。如果你想引导完成后移除启动媒介，可以使用 <code>copytoram</code> 启动项，这样会把系统复制到内存。</p><div class="hint-container warning"><p class="hint-container-title">屏幕工作不正常</p><p>如果再正常的内核引导下，屏幕会有闪烁，撕裂的情况发生，导致安装难以继续。那么请重启后选择 <code>nomodeset</code> 项引导，此项会禁用一些内核针对显卡的功能。</p></div><h2 id="进入-live-cd" tabindex="-1"><a class="header-anchor" href="#进入-live-cd" aria-hidden="true">#</a> 进入 Live CD</h2><figure><img src="'+u+'" alt="初遇" tabindex="0" loading="lazy"><figcaption>初遇</figcaption></figure><p>如果你是 ArchLinux 用户，那可能你会对这个 tty 界面无比熟悉 ———— ArchLinux 的安装正是从这里开始的，NixOS 也可以。</p><p>我们现在进入的系统是由镜像直接初始化的，系统并未被安装到硬盘上，我们需要使用现在这个已经被加载的基本系统完成 NixOS 到硬盘的部署。</p><h3 id="网络连接" tabindex="-1"><a class="header-anchor" href="#网络连接" aria-hidden="true">#</a> 网络连接</h3><p>如果你有可选的有线连接，请将网线接入到电脑。</p><h4 id="usb-热点" tabindex="-1"><a class="header-anchor" href="#usb-热点" aria-hidden="true">#</a> USB 热点</h4><p>退而求其次，如果你数据流量充足，也可以使用 USB 共享网络给主机。只需要将手机通过 USB 数据线连接到电脑，然后找到下属页面，打开对应的开关：</p><figure><img src="'+h+`" alt="OriginOS 示例" tabindex="0" loading="lazy"><figcaption>OriginOS 示例</figcaption></figure><h4 id="wifi-连接" tabindex="-1"><a class="header-anchor" href="#wifi-连接" aria-hidden="true">#</a> WIFI 连接</h4><p>NixOS 中自带的无线守护程序不是 <code>NetWorkManager</code>，也不是 <code>iwd</code>，而是 <code>wpa_supplicant</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start wpa_supplicant  <span class="token comment"># 启动服务</span>
<span class="token function">sudo</span> wpa_cli  <span class="token comment"># 进入 wpa 命令行</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就进入了交互模式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> add_network
<span class="token number">0</span>
<span class="token operator">&gt;</span> set_network <span class="token number">0</span> ssid <span class="token string">&quot;你的 SSID&quot;</span>
OK
<span class="token operator">&gt;</span> set_network <span class="token number">0</span> psk <span class="token string">&quot;你的 WIFI 密码&quot;</span>
OK
<span class="token operator">&gt;</span> set_network <span class="token number">0</span> key_mgmt WPA-PSK  <span class="token comment"># 加密方式</span>
OK
<span class="token operator">&gt;</span> enable_network <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>等待出现一条消息后即可 <code>quit</code> 退出交互模式。</p><h4 id="检测网络" tabindex="-1"><a class="header-anchor" href="#检测网络" aria-hidden="true">#</a> 检测网络</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ping</span> www.baidu.com  <span class="token comment"># 此项不通优先先检查域名解析服务器</span>
<span class="token function">ping</span> <span class="token number">119.29</span>.29.29 <span class="token comment"># 腾讯 DNSPod，不通请检查网络连接</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果收到了大多数乃至全部包，说明网络是连通的。</p><h3 id="更换-substituters" tabindex="-1"><a class="header-anchor" href="#更换-substituters" aria-hidden="true">#</a> 更换 substituters</h3><p>类似其他发行版的换源。这和添加频道不太一样，因为 <code>substituters</code> 服务器实际上提供的是预编译的二进制包，默认情况下 NixOS 依然是以源码分发主导，二进制分发为辅。想象一下，没有二进制构建缓存（Binary cache），你就得像 Gentoo 人一样永远都在构建软件的路上，同时家里的电表飞着转，而一个完整的系统是由几千个包构成的，下载源码，构建它们是相当漫长的过程。什么你就是 Gentoo 人？那当我没说。</p><p>我们当前修改的是 Live CD 的 <code>substituters</code>，这意味着如果想要对硬盘中的系统生效，你仍然需要故技重施。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/nixos/configuration.nix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">vim</p><p>vi/vim 是 linux 上最经典的文本编辑器之一，如果你不清楚操作的话这里简述一下： <code>i</code> 进入编辑模式，<code>Esc</code> 退出任意模式，进入命令模式，命令模式下输入 <code>:wq</code> 或 <code>:x</code> 保存。</p></div><p>添加 <code>substituter</code>：</p><div class="language-nix line-numbers-mode" data-ext="nix"><pre class="language-nix"><code><span class="token punctuation">(</span>config<span class="token punctuation">,</span> pkgs<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">{</span>  
  imports <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token operator">&lt;</span><span class="token url">nixpkgs/nixos/modules/installer/cd-dvd/installation-cd-minimal.nix</span><span class="token operator">&gt;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
  nix<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>substituters <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">&quot;https://mirrors.ustc.edu.cn/nix-channels/store&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">只读写入警告</p><p>如果你发现打开文件以后，左下角出现 readonly 提示，那可能是你没有 sudo 提取，抑或你没有选择 copytoram 启动项。 如果你确认了使用 sudo 提权，那么无视提示即可，编辑完成后只需要命令模式下输入 <code>:wq!</code> 强制保存即可。这一步的代价是可能损坏 ISO 文件，不过 ISO 是可以再下载的，就算损坏了也无所谓。</p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> nixos-rebuild switch  <span class="token comment"># 由于更新了配置，重新“生成”系统</span>
<span class="token function">sudo</span> nix-channel <span class="token parameter variable">--update</span>  <span class="token comment"># 更新频道</span>
<span class="token function">sudo</span> nixos-rebuild switch <span class="token parameter variable">--upgrade</span>  <span class="token comment"># 若有系统更新，重新构建系统“生成”</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="分区" tabindex="-1"><a class="header-anchor" href="#分区" aria-hidden="true">#</a> 分区</h3><p>首先，我们使用 <code>lsblk</code> 命令查看一手分区情况：</p>`,38);function S(O,I){const e=d("ExternalLinkIcon");return o(),r("div",null,[b,a("p",null,[n("我们使用 "),a("a",v,[n("Ventoy"),s(e)]),n(" 制作引导媒介，Ventoy 会将引导写入媒介（驱动器），然后你可以间接选择引导你媒介中的镜像。这样的好处是你不用为了刻录整个驱动器，下次需要引导其他镜像时只需要把镜像拷贝到该驱动器即可。")]),a("p",null,[n("下载"),a("a",g,[n("最简镜像"),s(e)]),n(" （Minimal ISO image），我们不使用官方安装程序做演示，因为没有太多的自定义选项。下载完成后，拷贝镜像至已经安装 Ventoy 的驱动器的任意目录。")]),k,a("div",f,[x,a("p",null,[n("NixOS 已经支持安全引导，参见 "),a("a",_,[n("lanzaboote"),s(e)])])]),w])}const B=t(m,[["render",S],["__file","greenHand.html.vue"]]);export{B as default};
